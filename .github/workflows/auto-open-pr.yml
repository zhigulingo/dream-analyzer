name: Auto Open PR

on:
  push:
    branches:
      - "feature/**"
      - "fix/**"
      - "chore/**"

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  open:
    runs-on: ubuntu-latest
    steps:
      - name: Create PR if missing and ensure automerge label
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = context.ref.replace('refs/heads/', '');
            // Skip protected branches
            if (['main','master'].includes(branch)) return;

            // Check if PR already exists
            const { data: prs } = await github.rest.pulls.list({
              ...context.repo,
              head: `${context.repo.owner}:${branch}`,
              state: 'open'
            });
            if (prs.length > 0) {
              core.info(`PR already exists: #${prs[0].number}`);
              // Add automerge label to existing PR
              try {
                await github.rest.issues.addLabels({
                  ...context.repo,
                  issue_number: prs[0].number,
                  labels: ['automerge']
                });
              } catch (e) {
                core.warning(`Failed to add label to existing PR: ${e.message}`);
              }
              return;
            }

            const pretty = branch.replace(/^[^\/]+\//,'').replace(/[-_]/g,' ');
            const title = `feat: ${pretty}`;
            const { data: pr } = await github.rest.pulls.create({
              ...context.repo,
              head: branch,
              base: 'main',
              title,
              body: 'Auto-created PR for faster testing.',
              draft: false
            });
            core.info(`Created PR #${pr.number}`);
            // Label new PR for automerge
            try {
              await github.rest.issues.addLabels({
                ...context.repo,
                issue_number: pr.number,
                labels: ['automerge']
              });
            } catch (e) {
              core.warning(`Failed to add label: ${e.message}`);
            }