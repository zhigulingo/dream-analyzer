// tma/src/main.js
import { createApp } from 'vue'
import { createPinia } from 'pinia'

import App from './App.vue' // –í–∞—à –∫–æ—Ä–Ω–µ–≤–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Vue
// import router from './router' // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Vue Router

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤–∞—à–∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
import "./index.css"
// import './assets/main.css'

// –ü–†–û–°–¢–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø TELEGRAM API
// –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è Telegram API
if (typeof window !== 'undefined') {
  if (!window.Telegram) {
    window.Telegram = {
      WebApp: {
        ready: () => {},
        requestFullscreen: () => {},
        exitFullscreen: () => {},
        expand: () => {},
        disableVerticalSwipes: () => {},
        enableClosingConfirmation: () => {},
        MainButton: {
          hide: () => {},
          show: () => {},
          setParams: () => {},
          offClick: () => {},
          onClick: () => {}
        },
        viewportHeight: typeof window !== 'undefined' ? window.innerHeight : 600,
        viewportChanged: () => {},
        onEvent: () => {},
        HapticFeedback: {
          impactOccurred: () => {}
        }
      }
    };
  }

  if (!window.TelegramGameProxy) {
    window.TelegramGameProxy = {
      receiveEvent: () => {},
      initParams: {},
      sendData: () => {}
    };
  }

  // –ü—Ä–æ—Å—Ç–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  if (window.Telegram?.WebApp?.ready) {
    window.Telegram.WebApp.ready();
  }
}

console.log('üöÄ [MAIN] Starting Vue app initialization... v1.2.1');
console.log('üöÄ [MAIN] Current URL:', window.location.href);
console.log('üöÄ [MAIN] Timestamp:', new Date().toISOString());
console.log('üöÄ [MAIN] Telegram WebApp available:', typeof window !== 'undefined' && window.Telegram?.WebApp);

const app = createApp(App)

app.use(createPinia()) // –ü–æ–¥–∫–ª—é—á–∞–µ–º Pinia
// app.use(router) // –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä, –µ—Å–ª–∏ –µ—Å—Ç—å

app.mount('#app') // –ú–æ–Ω—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ <div id="app"> –∏–∑ index.html

console.log('‚úÖ [MAIN] Vue app mounted successfully');

// –ü–†–û–°–¢–´–ï –ì–õ–û–ë–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
window.triggerHaptic = (type = 'light') => {
  try {
    const tg = window.Telegram?.WebApp;
    if (tg?.HapticFeedback) {
      tg.HapticFeedback.impactOccurred(type);
    }
  } catch (error) {
    console.error('‚ùå [HAPTIC] Error:', error);
  }
};
