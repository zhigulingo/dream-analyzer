import { Bot, Context, session, SessionFlavor } from "grammy";
import { createClient, SupabaseClient } from "@supabase/supabase-js";
import { GoogleGenerativeAI } from "@google/generative-ai"; // –ù–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç
import dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞ (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
dotenv.config({ path: '../.env' }); // –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫ .env –≤ –∫–æ—Ä–Ω–µ

// --- –¢–∏–ø—ã ---
interface SessionData {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Ö—Ä–∞–Ω–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
}
type MyContext = Context & SessionFlavor<SessionData>;

// --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
const BOT_TOKEN = process.env.BOT_TOKEN;
const SUPABASE_URL = process.env.SUPABASE_URL;
// –ò—Å–ø–æ–ª—å–∑—É–µ–º Service Role Key –¥–ª—è –±—ç–∫–µ–Ω–¥–∞!
const SUPABASE_SERVICE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY;
const GEMINI_API_KEY = process.env.GEMINI_API_KEY; // –ù–æ–≤—ã–π –∫–ª—é—á

if (!BOT_TOKEN || !SUPABASE_URL || !SUPABASE_SERVICE_KEY || !GEMINI_API_KEY) {
  console.error("–û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!");
  process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É, –µ—Å–ª–∏ –∫–ª—é—á–µ–π –Ω–µ—Ç
}

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ö–ª–∏–µ–Ω—Ç–æ–≤ ---

// –ö–ª–∏–µ–Ω—Ç Supabase —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (Service Role)
const supabaseAdmin: SupabaseClient = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY, {
    auth: {
        // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è Service Key
        autoRefreshToken: false,
        persistSession: false
    }
});
console.log("Supabase Admin Client –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.");

// –ö–ª–∏–µ–Ω—Ç Google Generative AI
const genAI = new GoogleGenerativeAI(GEMINI_API_KEY);
const geminiModel = genAI.getGenerativeModel({ model: "gemini-pro" }); // –ò—Å–ø–æ–ª—å–∑—É–µ–º gemini-pro
console.log("Gemini Client –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (–º–æ–¥–µ–ª—å gemini-pro).");

// --- –§—É–Ω–∫—Ü–∏–∏ ---

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
 * @param userId - Telegram User ID
 * @returns ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users –∏–ª–∏ null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
 */
async function getOrCreateUser(userId: number): Promise<number | null> {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    let { data: existingUser, error: selectError } = await supabaseAdmin
      .from('users')
      .select('id')
      .eq('tg_id', userId)
      .single(); // single() –≤–µ—Ä–Ω–µ—Ç null, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏–ª–∏ –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–≥–æ

    if (selectError && selectError.code !== 'PGRST116') { // PGRST116 - –∫–æ–¥ "No rows found"
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, selectError);
      return null;
    }

    if (existingUser) {
      return existingUser.id; // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ ID
    } else {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Å –ø—Ä–æ–±–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
      const { data: newUser, error: insertError } = await supabaseAdmin
        .from('users')
        .insert({
          tg_id: userId,
          subscription_type: 'free', // –ò–ª–∏ –≤–∞—à –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ç–∏–ø
          tokens: 1 // –î–∞–µ–º 1 –ø—Ä–æ–±–Ω—ã–π —Ç–æ–∫–µ–Ω
          // subscription_end –º–æ–∂–Ω–æ –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å null
        })
        .select('id') // –í–æ–∑–≤—Ä–∞—â–∞–µ–º ID —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        .single(); // single() –Ω—É–∂–µ–Ω, —Ç.–∫. insert –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤

      if (insertError) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, insertError);
        return null;
      }

      if (newUser) {
        console.log(`–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: tg_id=${userId}, id=${newUser.id}`);
        return newUser.id;
      } else {
        console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –ø–æ—Å–ª–µ –≤—Å—Ç–∞–≤–∫–∏.`);
        return null;
      }
    }
  } catch (error) {
    console.error(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ getOrCreateUser –¥–ª—è ${userId}:`, error);
    return null;
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ —Å–Ω–∞ –æ—Ç Gemini API.
 * @param dreamText - –¢–µ–∫—Å—Ç —Å–Ω–∞.
 * @returns –°—Ç—Ä–æ–∫—É —Å –∞–Ω–∞–ª–∏–∑–æ–º –∏–ª–∏ null –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏.
 */
async function getGeminiAnalysis(dreamText: string): Promise<string | null> {
  if (!dreamText || dreamText.trim().length === 0) {
      return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Å–æ–Ω.";
  }
  // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã —Ç–µ–∫—Å—Ç–∞ (–ø—Ä–∏–º–µ—Ä)
  const MAX_DREAM_LENGTH = 4000; // –û–≥—Ä–∞–Ω–∏—á—å—Ç–µ, —á—Ç–æ–±—ã –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥ —Ç–æ–∫–µ–Ω–æ–≤ Gemini
  if (dreamText.length > MAX_DREAM_LENGTH) {
      return `–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–∞—à —Å–æ–Ω —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π (>${MAX_DREAM_LENGTH} —Å–∏–º–≤–æ–ª–æ–≤). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–∏—Å–∞—Ç—å –µ–≥–æ –∫–æ—Ä–æ—á–µ.`;
  }

  try {
    console.log("–ó–∞–ø—Ä–æ—Å –∞–Ω–∞–ª–∏–∑–∞ –∫ Gemini...");
    const prompt = `–¢—ã - —ç–º–ø–∞—Ç–∏—á–Ω—ã–π –∏ –æ–ø—ã—Ç–Ω—ã–π —Ç–æ–ª–∫–æ–≤–∞—Ç–µ–ª—å —Å–Ω–æ–≤. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π —Å–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å–æ—Ö—Ä–∞–Ω—è—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –∏–∑–±–µ–≥–∞—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏—Ö –¥–∏–∞–≥–Ω–æ–∑–æ–≤ –∏–ª–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –±—É–¥—É—â–µ–≥–æ.
–°–æ–Ω: "${dreamText}"

–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –∞–Ω–∞–ª–∏–∑ (2-4 –∞–±–∑–∞—Ü–∞), —Ñ–æ–∫—É—Å–∏—Ä—É—è—Å—å –Ω–∞:
1.  –í–æ–∑–º–æ–∂–Ω—ã—Ö —Å–∏–º–≤–æ–ª–∞—Ö –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–Ω–∞.
2.  –ü—Ä–µ–æ–±–ª–∞–¥–∞—é—â–∏—Ö —ç–º–æ—Ü–∏—è—Ö –∏ –∏—Ö —Å–≤—è–∑–∏ —Å —Ä–µ–∞–ª—å–Ω–æ–π –∂–∏–∑–Ω—å—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ).
3.  –û–±—â–∏—Ö —Ç–µ–º–∞—Ö –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è –≤–æ —Å–Ω–µ.
–û—Ç–≤–µ—á–∞–π –º—è–≥–∫–æ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–µ –∏ –ø–æ–Ω—è—Ç–Ω–æ. –ù–µ –¥–∞–≤–∞–π –ø—Ä—è–º—ã—Ö —Å–æ–≤–µ—Ç–æ–≤, —á—Ç–æ –¥–µ–ª–∞—Ç—å.`;

    const result = await geminiModel.generateContent(prompt);
    const response = await result.response;
    const analysisText = response.text();

    console.log("–ê–Ω–∞–ª–∏–∑ –æ—Ç Gemini –ø–æ–ª—É—á–µ–Ω.");
    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
    if (!analysisText || analysisText.trim().length === 0) {
        console.error("Gemini –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç.");
        return "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –¥–ª—è –≤–∞—à–µ–≥–æ —Å–Ω–∞ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.";
    }

    // TODO: –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –æ—Ç–≤–µ—Ç–∞ Gemini, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    // (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ safetyRatings, –µ—Å–ª–∏ API –∏—Ö –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç)

    return analysisText;

  } catch (error: any) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ Gemini API:", error);
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–∞–∑–Ω—ã—Ö –æ—à–∏–±–æ–∫ API Google
    return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–∏—Å–æ–º –∞–Ω–∞–ª–∏–∑–∞ —Å–Ω–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
  }
}

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–Ω–∞–ª–∏–∑ —Å–Ω–∞.
 * @param ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Grammy.
 * @param dreamText - –¢–µ–∫—Å—Ç —Å–Ω–∞.
 */
async function analyzeDream(ctx: MyContext, dreamText: string) {
  const userId = ctx.from?.id;
  if (!userId) {
    await ctx.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.");
    return;
  }

  // 1. –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
  const userDbId = await getOrCreateUser(userId);
  if (!userDbId) {
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ—Å—Ç—É–ø–µ –∫ –≤–∞—à–µ–º—É –ø—Ä–æ—Ñ–∏–ª—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
      return;
  }

  // 2. –ü—ã—Ç–∞–µ–º—Å—è —Å–ø–∏—Å–∞—Ç—å —Ç–æ–∫–µ–Ω –ê–¢–û–ú–ê–†–ù–û —á–µ—Ä–µ–∑ RPC
  await ctx.reply("–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ –∏ –≥–æ—Ç–æ–≤–∏–º—Å—è –∫ –∞–Ω–∞–ª–∏–∑—É...");
  try {
      const { data: tokenDecremented, error: rpcError } = await supabaseAdmin
          .rpc('decrement_token_if_available', { user_tg_id: userId });

      if (rpcError) {
          console.error(`–û—à–∏–±–∫–∞ RPC decrement_token_if_available –¥–ª—è tg_id ${userId}:`, rpcError);
          await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
          return;
      }

      if (!tokenDecremented) {
          console.log(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è tg_id ${userId}.`);
          // TODO: –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –∫—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã –∏ –∫–Ω–æ–ø–∫—É/—Å—Å—ã–ª–∫—É –Ω–∞ TMA
          await ctx.reply("–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∏–ª–∏ –∫—É–ø–ª–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞. –û—Ç–∫—Ä–æ–π—Ç–µ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç, —á—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.", {
            // reply_markup: ... // –°—é–¥–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è TMA
          });
          return;
      }

      // 3. –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å–ø–∏—Å–∞–Ω - –≤—ã–∑—ã–≤–∞–µ–º Gemini
      console.log(`–¢–æ–∫–µ–Ω —Å–ø–∏—Å–∞–Ω –¥–ª—è tg_id ${userId}. –í—ã–∑–æ–≤ Gemini...`);
      await ctx.reply("–¢–æ–∫–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω. –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à —Å–æ–Ω... üß†‚ú®");
      const analysisResult = await getGeminiAnalysis(dreamText);

      if (!analysisResult || analysisResult.startsWith("–ò–∑–≤–∏–Ω–∏—Ç–µ,") || analysisResult.startsWith("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞") || analysisResult.startsWith("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞,")) {
          // –ï—Å–ª–∏ Gemini –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É –∏–ª–∏ –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
          await ctx.reply(analysisResult || "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–Ω–∞–ª–∏–∑.");
          // –í–ê–ñ–ù–û: –¢–æ–∫–µ–Ω —É–∂–µ —Å–ø–∏—Å–∞–Ω. –ù—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å: –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ª–∏ –µ–≥–æ?
          // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ —Å–æ–æ–±—â–∞–µ–º –æ–± –æ—à–∏–±–∫–µ. –î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω—É–∂–Ω–∞ –¥–æ–ø. –ª–æ–≥–∏–∫–∞.
          console.warn(`–ê–Ω–∞–ª–∏–∑ –¥–ª—è tg_id ${userId} –Ω–µ —É–¥–∞–ª—Å—è, –Ω–æ —Ç–æ–∫–µ–Ω –±—ã–ª —Å–ø–∏—Å–∞–Ω.`);
          return;
      }

      // 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º —É—Å–ø–µ—à–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –≤ –ë–î
      const { error: insertAnalysisError } = await supabaseAdmin
          .from('analyses')
          .insert({
              user_id: userDbId, // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∏–∑ –Ω–∞—à–µ–π —Ç–∞–±–ª–∏—Ü—ã users
              dream_text: dreamText,
              analysis: analysisResult
          });

      if (insertAnalysisError) {
          console.error(`–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è user_id ${userDbId}:`, insertAnalysisError);
          await ctx.reply("–í–∞—à —Å–æ–Ω –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.");
          // –û–ø—è—Ç—å –∂–µ, —Ç–æ–∫–µ–Ω —Å–ø–∏—Å–∞–Ω.
          return;
      }

      // 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      console.log(`–ê–Ω–∞–ª–∏–∑ –¥–ª—è tg_id ${userId} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.`);
      await ctx.reply(`–í–æ—Ç –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ —Å–Ω–∞:\n\n${analysisResult}\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–≤–æ–∏—Ö –∞–Ω–∞–ª–∏–∑–æ–≤ –≤ –õ–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.`); // TODO: –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –õ–ö

  } catch (error) {
      console.error(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ analyzeDream –¥–ª—è tg_id ${userId}:`, error);
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–Ω–∞.");
  }
}

// --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ë–æ—Ç–∞ ---
const bot = new Bot<MyContext>(BOT_TOKEN);

// Middleware –¥–ª—è —Å–µ—Å—Å–∏–π (–µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è)
bot.use(session({ initial: (): SessionData => ({}) }));

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.command("start", async (ctx) => {
  const userId = ctx.from?.id;
  if (!userId) return; // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –µ—Å–ª–∏ –Ω–µ—Ç ID

  console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞.`);
  await getOrCreateUser(userId); // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –±–∞–∑–µ

  await ctx.reply(
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –°–Ω–æ–≤! ‚ú®\n\n" +
    "–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –∑–Ω–∞—á–µ–Ω–∏—è—Ö –≤–∞—à–∏—Ö —Å–Ω–æ–≤–∏–¥–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.\n\n" +
    "–£ –≤–∞—Å –µ—Å—Ç—å 1 –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑. –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ —Å–≤–æ–π —Å–æ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –µ–≥–æ —Ä–∞—Å—Ç–æ–ª–∫–æ–≤–∞—Ç—å.\n\n" +
    "–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞–º–∏.",
    {
      reply_markup: {
        inline_keyboard: [
          // TODO: –ó–∞–º–µ–Ω–∏—Ç—å YOUR_TMA_URL –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –≤–∞—à–µ–≥–æ Mini App
          [{ text: "–û—Ç–∫—Ä—ã—Ç—å –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç üë§", web_app: { url: process.env.TMA_URL || "YOUR_TMA_URL" } }],
        ],
      },
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–Ω–∞)
bot.on("message:text", async (ctx) => {
  const dreamText = ctx.message.text;
  const userId = ctx.from?.id;
  console.log(`–ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç –æ—Ç ${userId}: "${dreamText}"`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥–æ–π
  if (dreamText.startsWith('/')) {
      // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å
      // await ctx.reply("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.");
      return;
  }

  // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Å–Ω–∞
  await analyzeDream(ctx, dreamText);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
bot.catch((err) => {
  const ctx = err.ctx;
  console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ${ctx.update.update_id}:`);
  const e = err.error;
  // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ
  if (e instanceof Error) {
    console.error("Error:", e.stack || e.message);
  } else {
    console.error("Unknown error object:", e);
  }
  // –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ
  // ctx.reply("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞.").catch(e => console.error("Failed to send error message", e));
});


// --- –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è Netlify ---
// –í–∞–∂–Ω–æ: Netlify –æ–∂–∏–¥–∞–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç handler
export const handler = async (event: any) => {
    try {
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–æ–±—ã—Ç–∏–µ Netlify –≤ —Ñ–æ—Ä–º–∞—Ç, –ø–æ–Ω—è—Ç–Ω—ã–π Grammy
        // (–ú–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –∞–¥–∞–ø—Ç–µ—Ä –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ Netlify –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é,
        // –Ω–æ –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –≤–µ–±—Ö—É–∫–∞ `await bot.handleUpdate(JSON.parse(event.body))` —á–∞—Å—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç)
        await bot.handleUpdate(JSON.parse(event.body || '{}'));
        return { statusCode: 200, body: "" }; // –û—Ç–≤–µ—á–∞–µ–º Telegram, —á—Ç–æ –≤–µ–±—Ö—É–∫ –ø–æ–ª—É—á–µ–Ω
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ:", error);
        return { statusCode: 500, body: "Internal Server Error" };
    }
};

// --- –ó–∞–ø—É—Å–∫ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è Netlify) ---
// –≠—Ç–æ—Ç –±–ª–æ–∫ –∫–æ–¥–∞ –Ω–µ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–∞ Netlify, –æ–Ω –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
// –ù–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ `ts-node bot/bot.ts`
if (process.env.NODE_ENV !== 'production' && require.main === module) {
  console.log("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...");
  bot.start(); // –ò—Å–ø–æ–ª—å–∑—É–µ—Ç long polling

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  process.once("SIGINT", () => bot.stop());
  process.once("SIGTERM", () => bot.stop());
}
