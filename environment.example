# =================================
# DREAM ANALYZER - ENVIRONMENT VARIABLES
# =================================
# Скопируйте этот файл в .env и заполните своими значениями

# Telegram Bot Configuration
BOT_TOKEN=your_telegram_bot_token

# Supabase Configuration
SUPABASE_URL=your_supabase_project_url
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key

# AI Service Configuration
GEMINI_API_KEY=your_gemini_api_key
GEMINI_MODEL=gemini-2.5-flash
GEMINI_ANALYSIS_TIMEOUT_MS=12000

# Authentication Secrets
JWT_SECRET=your_jwt_secret_key
REFRESH_SECRET=your_refresh_token_secret

# Frontend URLs
TMA_URL=your_tma_url
ALLOWED_TMA_ORIGIN=your_tma_domain
ALLOWED_WEB_ORIGIN=your_web_domain

# API Configuration
VITE_API_BASE_URL=your_api_base_url
VITE_WEB_LOGIN_API_URL=your_web_login_url
VITE_REFRESH_TOKEN_API_URL=your_refresh_token_url
VITE_LOGOUT_API_URL=your_logout_url

# Additional Web Configuration
WEB_URL=your_web_app_url

# =================================
# ОПИСАНИЕ ПЕРЕМЕННЫХ:
# =================================
# BOT_TOKEN - токен Telegram бота от @BotFather
# SUPABASE_URL - URL вашего проекта Supabase
# SUPABASE_SERVICE_KEY - сервисный ключ Supabase (service_role key)
# GEMINI_API_KEY - API ключ для Google Gemini AI
# JWT_SECRET - секретный ключ для JWT токенов (генерируйте случайную строку)
# REFRESH_SECRET - секретный ключ для refresh токенов (генерируйте случайную строку)
# TMA_URL - URL Telegram Mini App
# ALLOWED_TMA_ORIGIN - домен TMA для CORS
# ALLOWED_WEB_ORIGIN - домен веб-приложения для CORS
# VITE_API_BASE_URL - базовый URL API для фронтенда
# VITE_WEB_LOGIN_API_URL - URL для веб-логина
# VITE_REFRESH_TOKEN_API_URL - URL для обновления токенов
# VITE_LOGOUT_API_URL - URL для выхода из системы
# WEB_URL - URL веб-приложения

# =================================
# ИНСТРУКЦИИ ПО НАСТРОЙКЕ:
# =================================
# 1. Скопируйте этот файл и переименуйте в .env
# 2. Заполните все переменные своими реальными значениями
# 3. Убедитесь, что .env файл добавлен в .gitignore
# 4. Для генерации секретных ключей используйте:
#    node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"